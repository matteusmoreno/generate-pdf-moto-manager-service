name: Deploy to AWS and Docker Hub

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código-fonte
        uses: actions/checkout@v3

      # Passo para configurar Python
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Instalação das dependências Python
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Login no Docker Hub
      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      # Build da imagem Docker
      - name: Build da imagem Docker
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/generate-pdf-garage-manager:1.0.0 .

      # Push da imagem para o Docker Hub
      - name: Push para Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/generate-pdf-garage-manager:1.0.0

      # Configuração das credenciais AWS
      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      # Atualizar serviço na AWS (usando ECS ou EC2, dependendo do seu setup)
      - name: Atualizar serviço na AWS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-definition.json  # Defina o caminho para o arquivo de task-definition do ECS
          service: generate-pdf-service  # Nome do serviço ECS
          cluster: garage-manager-cluster  # Nome do cluster ECS
          wait-for-service-stability: true
